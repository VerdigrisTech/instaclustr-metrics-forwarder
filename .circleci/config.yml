version: 2.1

orbs:
  aws-ecr: circleci/aws-ecr@4.0.1
  aws-ecs: circleci/aws-ecs@0.0.8

build-defaults: &build-defaults
  context: aws-global
  account-url: AWS_ECR_ACCOUNT_URL
  aws-access-key-id: AWS_ACCESS_KEY_ID
  aws-secret-access-key: AWS_SECRET_ACCESS_KEY
  create-repo: true
  dockerfile: Dockerfile
  repo: ${AWS_RESOURCE_NAME_PREFIX}
  filters:
    branches:
      only: master

deploy-defaults: &deploy-defaults
  context: aws-global
  cluster-name: "${AWS_RESOURCE_NAME_PREFIX}"

workflows:
  build-and-deploy:
    jobs:
      - aws-ecr/build_and_push_image:
          name: build-staging
          <<: *build-defaults
          tag: "staging-${CIRCLE_SHA1}"
          extra-build-args: "--build-arg ENVIRONMENT=staging"

      - aws-ecr/build_and_push_image:
          name: build-production
          <<: *build-defaults
          tag: "production-${CIRCLE_SHA1}"
          extra-build-args: "--build-arg ENVIRONMENT=production"

      - aws-ecs/deploy-service-update:
          name: deploy-staging
          <<: *deploy-defaults
          requires:
            - build-staging
          family: "${AWS_RESOURCE_NAME_PREFIX}-staging"
          container-image-name-updates: "tag=staging-${CIRCLE_SHA1}"

      - promote-to-production:
          type: approval
          requires:
            - build-production
            - deploy-staging

      - aws-ecs/deploy-service-update:
          name: deploy-production
          <<: *deploy-defaults
          requires:
            - promote-to-production
          family: "${AWS_RESOURCE_NAME_PREFIX}-production"
          container-image-name-updates: "tag=production-${CIRCLE_SHA1}"
